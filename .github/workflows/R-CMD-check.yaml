on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6', vdiffr: true}
          - {os: macOS-latest, r: '3.6', vdiffr: true}
          - {os: macOS-latest, r: 'devel', vdiffr: false}
          - {os: ubuntu-16.04, r: '3.2', vdiffr: false, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.3', vdiffr: false, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.4', vdiffr: false, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.5', vdiffr: false, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.6', vdiffr: true, rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      _R_CHECK_FORCE_SUGGESTS_: false
      # Runs vdiffr test only on the latest version of R
      VDIFFR_RUN_TESTS: ${{ matrix.config.vdiffr }}
      VDIFFR_LOG_PATH: "../vdiffr.Rout.fail"


    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install any dev or missing sysdeps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libfontconfig1-dev libcairo2-dev
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev

      - name: Mac systemdeps
        if: runner.os == 'macOS'
        run: |
          brew cask install xquartz phantomjs
          brew install pkg-config gdal

      # ------------------------------------------------------------

      - name: Rcpp band-aid
        run: |
          install.packages("Rcpp", repos="https://rcppcore.github.io/drat")
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      # Packages that aren't really worth putting in suggests but are
      # worth testing
      - name: Install testing dependencies
        run: |
          install.packages(c('sf', 'Cairo', 'patchwork', 'gridExtra', 'tinytex'))
          tinytex::install_tinytex()
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
